buildscript {
	ext {
		set('springCloudVersion', "Hoxton.SR8")
		set('springBootVersion', '2.3.3.RELEASE')
		set('dockerVersion', '0.22.1')
	}
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:${dockerVersion}"
    }
}

plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'idea'
	id 'eclipse'
}

group = 'br.challenge.transaction'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
    set('springBootVersion', '2.3.3.RELEASE')
}

dependencies {
	compile group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.3.3.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compile 'javax.validation:validation-api'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompile 'org.hamcrest:hamcrest'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}


apply plugin: 'org.springframework.boot'

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

bootRun {
	enabled = false
}

bootJar {
	enabled = false
}

jar {
	enabled = true
}

apply plugin: 'com.palantir.docker'

docker {
    dependsOn build
    name "${project.name}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}